{"version":3,"file":"component---src-pages-react-component-notification-tsx-9456f3aa3c7fc10679b6.js","mappings":"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","sources":["webpack://portfolio-2022/./src/pages/reactComponentNotification.tsx","webpack://portfolio-2022/../src/index.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport './styles/reactComponentNotification.scss';\nimport Background from './components/background/Background';\n\nimport Notification from 'react-simple-notification';\n\nconst reactComponentNotification = () => {\n\n  const [title, setTitle] = useState<string>('Amazing title');\n  const [content, setContent] = useState<string>('Your description');\n  const [icon, setIcon] = useState<string>('<img src=\"https://cdn-icons-png.flaticon.com/128/2989/2989898.png\" />');\n  const [closeTime, setCloseTime] = useState<number>(3000);\n  const [position, setPosition] = useState<string | null>();\n\n  return (\n    <main className=\"rcn\">\n      <Helmet>\n        <title>React Component Notification</title>\n        <meta property=\"og:title\" content=\"React Component Notification\" />\n        <meta property=\"og:description\" content=\"Best portfolio ever seen\" />\n        <meta property=\"og:url\" content=\"https://www.balzac.dev/\" />\n        <meta property=\"og:site_name\" content=\"Balzac's World 🌍\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, viewport-fit=cover\" />\n      </Helmet>\n      <Background />\n      <Notification\n        closeTimeOut={closeTime}\n        title={title}\n        content={content}\n        icon={<img src=\"https://cdn-icons-png.flaticon.com/128/2989/2989898.png\" />}\n        className=\"notiftest\"\n        position={position || undefined}\n      />\n      <div className=\"toolbox\">\n        <h1>React Component Notification</h1>\n        <p>Nb: Notification is automatically displayed when title or content are updated</p>\n        <div className=\"threeParts\">\n          <input\n            type=\"number\"\n            placeholder=\"CloseTimeOut\"\n            value={closeTime}\n            onChange={(e) => setCloseTime(Number(e.target.value))}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"content\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n          />\n        </div>\n        <input\n          type=\"text\"\n          placeholder=\"icon\"\n          value={icon}\n          onChange={(e) => setIcon(e.target.value)}\n        />\n        <div className=\"position\">\n          <button onClick={() => setPosition('top_left')}>top_left</button>\n          <button onClick={() => setPosition('top_center')}>top_center</button>\n          <button onClick={() => setPosition('top_right')}>top_right</button>\n          <button onClick={() => setPosition('bottom_left')}>bottom_left</button>\n          <button onClick={() => setPosition('bottom_center')}>bottom_center</button>\n          <button onClick={() => setPosition('bottom_right')}>bottom_right</button>\n        </div>\n        <button onClick={() => { setTitle(''); setContent('') }} className=\"close\">close</button>\n        <code>\n          import Notification from 'react-simple-notification';<br />\n          <br />\n          ...<br />\n          <br />\n          &lt;Notification<br />\n          &nbsp;&nbsp;closeTimeOut=&#123;{closeTime}&#125;<br />\n          &nbsp;&nbsp;title=\"{title}\"<br />\n          &nbsp;&nbsp;content=\"{content}\"<br />\n          &nbsp;&nbsp;icon=&#123;{icon}&#125;<br />\n          &nbsp;&nbsp;className=\"notiftest\"<br />\n          {position && <code dangerouslySetInnerHTML={{ __html: `&nbsp;&nbsp;position=\"${position || undefined}<br />` }} />}\n          /&gt;\n        </code>\n        <a href=\"https://www.npmjs.com/package/react-component-notification\">react-component-notification</a>\n      </div>\n    </main>\n  );\n};\n\nexport default reactComponentNotification;\n","import * as React from 'react'\nimport './styles.scss'\n\ninterface Props {\n  title?: string,\n  content?: string,\n  icon?: React.ReactNode,\n  onClose?: Function,\n  closeTimeOut?: number,\n  className?: string,\n  position?: string,\n}\n\nconst Notification = ({ title, content, icon, onClose, closeTimeOut, className, position }: Props) => {\n  const [lastTitle, setLastTitle] = React.useState<string | null>(title || null);\n  const [lastContent, setLastContent] = React.useState<string | null>(content || null);\n  const [hidden, setHidden] = React.useState<boolean>(false);\n\n  function handleClose() {\n    if (onClose) onClose();\n    setHidden(true);\n  }\n\n  React.useEffect(() => {\n    if (title || content || title !== undefined || content !== undefined) {\n      if (title !== lastTitle || content !== lastContent) setHidden(false);\n      if (title !== undefined) setLastTitle(title);\n      if (content !== undefined) setLastContent(content);\n    }\n  }, [title, content]);\n\n  React.useEffect(() => {\n    if (title || content) {\n      setTimeout(() => {\n        handleClose();\n      }, closeTimeOut || 3000);\n    }\n  }, [title, content]);\n\n  const classes = () => {\n    let cn = 'notification';\n    if ((title || content) && !hidden) cn += ' active';\n    if (className) cn += ` ${className}`;\n    if (position) cn += ` ${position}`;\n    return cn;\n  }\n\n  return (\n    <button className={classes()}>\n      {icon}\n      <div>\n        <h1>{lastTitle}</h1>\n        <p>{lastContent}</p>\n      </div>\n      <button onClick={() => handleClose()} className=\"close\"></button>\n    </button>\n  );\n}\n\nexport default Notification;\n"],"names":["_useState","useState","title","setTitle","_useState2","content","setContent","_useState3","icon","setIcon","_useState4","closeTime","setCloseTime","_useState5","position","setPosition","React","className","Helmet","property","name","Background","Notification","closeTimeOut","src","undefined","type","placeholder","value","onChange","e","Number","target","onClick","dangerouslySetInnerHTML","__html","href","_a","onClose","_b","lastTitle","setLastTitle","_c","lastContent","setLastContent","_d","hidden","setHidden","handleClose","useEffect","setTimeout","cn","createElement"],"sourceRoot":""}