{"version":3,"sources":["images/login_background.jpg","images/marker_green.png","images/marker_orange.png","images/marker_red.png","images/marker_purple.png","images/marker_position.png","images/mask.png","images/gel.png","images/user_icon.png","components/Maps.js","components/RowSearch.js","components/Search.js","components/Store.js","components/LeftMenu.js","components/RowHistory.js","components/History.js","components/FieldEditable.js","components/Settings.js","components/HomePage.js","components/NotFound.js","components/Login.js","components/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","mapboxgl","accessToken","Maps","props","loadMap","position","setState","allowed","longUser","coords","longitude","latUser","latitude","map","Map","container","mapContainer","style","center","zoom","state","on","lng","getCenter","toFixed","lat","getZoom","loadImage","marker_green","error","image","addImage","marker_orange","marker_red","marker_purple","marker_position","addSource","addLayer","self","axios","get","method","then","response","data","forEach","element","id","toString","Longitude","Latitude","e","setStore","idStoreSelected","getLayer","removeLayer","catch","console","log","this","ref","el","React","Component","Icon","require","RowSearch","openDetail","value","store","className","nom","adresse","codePostal","ville","name","onClick","Search","handleChange","event","searchValue","target","search","length","result","params","i","key","type","placeholder","onChange","Store","componentWillReceiveProps","elem","loadData","componentDidMount","loaded","edit","maxClient","people","waitTime","maskRequired","gel","handleChangeCapacity","handleChangePeople","handleMask","handleGel","close","cancelEdit","send","nextState","parseInt","fetch","body","JSON","stringify","json","err","Switch","checked","color","src","maskImg","alt","gelImg","LeftMenu","displayMenu","goToAccueil","page","togglePage","goToHistory","goToSettings","userLogo","connected","to","RowHistory","toggleDisplay","displayDetail","History","backToHome","FieldEditable","icon","title","handleChangeValue","Settings","HomePage","nextPage","NotFound","href","Login","background","Backgound","autoComplete","required","for","class","SignUp","email","username","password","onChangeEmail","bind","onChangeUsername","onChangePassword","requestOptions","mode","headers","htmlFor","signUpUser","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ce41bb5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login_background.26b190e2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/marker_green.2e79d029.png\";","module.exports = __webpack_public_path__ + \"static/media/marker_orange.6e15b151.png\";","module.exports = __webpack_public_path__ + \"static/media/marker_red.b7a958d0.png\";","module.exports = __webpack_public_path__ + \"static/media/marker_purple.82534b08.png\";","module.exports = __webpack_public_path__ + \"static/media/marker_position.8e64e3dc.png\";","module.exports = __webpack_public_path__ + \"static/media/mask.c71e7e6a.png\";","module.exports = __webpack_public_path__ + \"static/media/gel.fe9c5bfa.png\";","module.exports = __webpack_public_path__ + \"static/media/user_icon.c68b9e3d.png\";","import React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport '../assets/style/Maps.css';\nimport axios from 'axios';\n\nimport marker_green from '../images/marker_green.png';\nimport marker_orange from '../images/marker_orange.png';\nimport marker_red from '../images/marker_red.png';\nimport marker_purple from '../images/marker_purple.png';\nimport marker_position from '../images/marker_position.png';\nimport { isNull } from 'util';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiYmFsemFjYmRtdCIsImEiOiJja2JpNnRvd2swY2I3Mnpxdm9pbmFpMHZsIn0.DaO5L1gj7hISYKsYQ9wsDg';\n\nclass Maps extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            allowed: true,\n            lng: 2.33,\n            lat: 48.86,\n            zoom: 12,\n            idStoreSelected: null\n        };\n    }\n\n    loadMap = (position = null) => {\n\n        if (position) {\n            this.setState({ allowed: true });\n        } else {\n            return;\n        }\n\n        let longUser = position.coords.longitude;\n        let latUser = position.coords.latitude;\n\n        this.setState({\n            longUser: position.coords.longitude,\n            latUser: position.coords.latitude,\n        });\n\n        const map = new mapboxgl.Map({\n            container: this.mapContainer,\n            style: 'mapbox://styles/balzacbdmt/ckbjyoxr2036v1inwsm1e4gzw',\n            center: [longUser, latUser],\n            zoom: this.state.zoom\n        });\n\n        map.on('move', () => {\n            this.setState({\n                lng: map.getCenter().lng.toFixed(4),\n                lat: map.getCenter().lat.toFixed(4),\n                zoom: map.getZoom().toFixed(2)\n            });\n        });\n\n        //Adding user gelocation marker on the map\n        map.on('load', function() {\n            map.loadImage(\n                marker_green,\n                function(error, image) {\n                    if (error) throw error;\n                    map.addImage('marker_green', image);\n                }\n            )\n            map.loadImage(\n                marker_orange,\n                function(error, image) {\n                    if (error) throw error;\n                    map.addImage('marker_orange', image);\n                }\n            )\n            map.loadImage(\n                marker_red,\n                function(error, image) {\n                    if (error) throw error;\n                    map.addImage('marker_red', image);\n                }\n            )\n            map.loadImage(\n                marker_purple,\n                function(error, image) {\n                    if (error) throw error;\n                    map.addImage('marker_purple', image);\n                }\n            )\n            map.loadImage(\n                marker_position,\n                function(error, image) {\n                    if (error) throw error;\n                    map.addImage('marker_position', image);\n                    map.addSource('user_geolocation', {\n                        'type': 'geojson',\n                        'data': {\n                            'type': 'FeatureCollection',\n                            'features': [\n                                {\n                                    'type': 'Feature',\n                                    'geometry': {\n                                        'type': 'Point',\n                                        'coordinates': [longUser, latUser]\n                                    }\n                                }\n                            ]\n                        }\n                    });\n                    map.addLayer({\n                        'id': 'user_geolocation_marker',\n                        'type': 'symbol',\n                        'source': 'user_geolocation',\n                        'layout': {\n                            'icon-image': 'marker_position',\n                            'icon-size': 0.10\n                        }\n                    });\n                }\n            );\n        });\n        \n        //Get and display stores on the map\n        let self = this;\n        axios.get('http://projet-web-training.ovh/affluence/Affluence/public/boutique/list', {\n            method: 'GET'\n        })\n        .then(function (response) {\n            response.data.forEach(element => {\n                map.addSource(element.id.toString(), {\n                    'type': 'geojson',\n                    'data': {\n                        'type': 'FeatureCollection',\n                        'features': [\n                            {\n                                'type': 'Feature',\n                                'geometry': {\n                                    'type': 'Point',\n                                    'coordinates': [element.Longitude, element.Latitude]\n                                }\n                            }\n                        ]\n                    }\n                });\n                map.addLayer({\n                    'id': element.id.toString(),\n                    'type': 'symbol',\n                    'source': element.id.toString(),\n                    'layout': {\n                        'icon-image': 'marker_green',\n                        'icon-size': 0.10\n                    }\n                });\n                map.on('click', element.id.toString(), function(e) {\n                    self.props.setStore(element);\n                    //unset selected previous store\n                    if (self.state.idStoreSelected) {\n                        if (map.getLayer(self.state.idStoreSelected.toString())) map.removeLayer(self.state.idStoreSelected.toString());\n                        map.addLayer({\n                            'id': self.state.idStoreSelected.toString(),\n                            'type': 'symbol',\n                            'source': self.state.idStoreSelected.toString(),\n                            'layout': {\n                                'icon-image': 'marker_green',\n                                'icon-size': 0.10\n                            }\n                        });\n                    }\n                    //Toggle color\n                    if (map.getLayer(element.id.toString())) map.removeLayer(element.id.toString());\n                    map.addLayer({\n                        'id': element.id.toString(),\n                        'type': 'symbol',\n                        'source': element.id.toString(),\n                        'layout': {\n                            'icon-image': 'marker_purple',\n                            'icon-size': 0.10\n                        }\n                    });\n                    self.setState({idStoreSelected: element.id.toString()})\n                });\n            });\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    componentDidMount() {\n        //DEBUG\n        let debug = {\n            coords: {\n                longitude: \"2.3488\",\n                latitude: \"48.8534\"\n            }\n        }\n        this.loadMap(debug);\n        // if (navigator.geolocation) {\n        //     navigator.geolocation.getCurrentPosition(this.loadMap);\n        // }\n    }\n\n    render() {\n        if (this.state.allowed) {\n            return (\n                <div>\n                    <div ref={el => this.mapContainer = el} />\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <h3>You need to accept localisation</h3>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Maps;","import React from 'react';\nimport '../assets/style/RowSearch.css';\n\nvar Icon = require('react-fontawesome')\n\nclass RowSearch extends React.Component {\n\n    openDetail = (value) => {\n        this.props.setStore(this.props.store);\n    }\n\n    render() {\n        return(\n            <div className=\"rowSearch\">\n                {/* <img className=\"img\" src=\"https://s1.qwant.com/thumbr/0x380/b/4/82af6bcdb4386df28abfdf59cec7ef28a3c8d4c6daf7014828d621efba9bc2/1200px-H%26M-Logo.svg.png?u=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F5%2F53%2FH%2526M-Logo.svg%2F1200px-H%2526M-Logo.svg.png&q=0&b=1&p=0&a=1\" /> */}\n                <div className=\"infos\">\n                    <p>{this.props.store.nom}</p>\n                    <p>{this.props.store.adresse}</p>\n                    <p>{this.props.store.codePostal}&nbsp;{this.props.store.ville}</p>\n                </div>\n                <Icon className=\"chevron\" name=\"chevron-right\" onClick={this.openDetail} />\n            </div>\n        );\n    }\n}\n\nexport default RowSearch;\n","import React from 'react';\nimport '../assets/style/Search.css';\nimport Rowsearch from './RowSearch';\nimport axios from 'axios';\n\nvar Icon = require('react-fontawesome')\n\nclass Search extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchValue: \"\",\n            result: []\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({searchValue: event.target.value});\n        this.search(event.target.value);\n    }\n\n    search = (value) => {\n        if (!value || value.length < 3) {\n            this.setState({result: []})\n            return;\n        }\n        let self = this;\n        axios.get(\"http://projet-web-training.ovh/affluence/Affluence/public/boutique/list_nom\", {\n            params: {\n              nom: value\n            }\n          })\n          .then(({data}) => (\n            self.setState({\n                result: data\n            })\n          ));\n    }\n\n    render() {   \n        var result = this.state.result.map((store, i) => {\n            return (\n                <Rowsearch store={store} key={i} setStore={this.props.setStore} />\n            );\n        });\n        \n        return(\n            <div className=\"search\">\n                <div className=\"searchBox\">\n                    <input type=\"text\" className=\"input\" placeholder=\"Rechercher\" value={this.state.searchValue} onChange={this.handleChange} />\n                    <Icon className=\"searchBtn\" name=\"search\" />\n                </div>\n                <div>\n                {result}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Search;\n","import React, { Fragment } from 'react';\nimport '../assets/style/Store.css';\nimport { Switch } from '@material-ui/core';\nimport axios from 'axios';\nimport maskImg from '../images/mask.png';\nimport gelImg from '../images/gel.png';\n\nvar Icon = require('react-fontawesome')\n\nclass Store extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loaded: false,\n            edit: false,\n        }\n    }\n\n    componentWillReceiveProps = (elem) => {\n        this.loadData(elem.store.id);\n    }\n\n    componentDidMount = () => {\n        this.loadData(this.props.store.id);\n    }\n\n    loadData = (id) => {\n        this.setState({loaded: false, edit: false});\n        let self = this;\n        axios.get('http://projet-web-training.ovh/affluence/Affluence/public/boutique/list/'+id)\n        .then(function (response) {\n            self.setState({\n                loaded: true,\n                edit: false,\n                adresse: response.data.adresse,\n                codePostal: response.data.codePostal,\n                ville: response.data.ville,\n                nom: response.data.nom,\n                maxClient: response.data.maxClient, \n                people: 0, //After, get the current value\n                waitTime: 0, //After, get the current value\n                maskRequired:response.data.maskRequired,\n                gel: response.data.gel,\n            })\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n    \n    handleChangeCapacity = (event) => {\n        this.setState({maxClient: event.target.value});\n    }\n\n    handleChangePeople = (event) => {\n        this.setState({people: event.target.value});\n    }\n\n    handleMask = () => {\n        this.setState({maskRequired: !this.state.maskRequired});\n    }\n\n    handleGel = () => {\n        this.setState({gel: !this.state.gel});\n    }\n\n    edit = () => {\n        this.setState({edit: true});\n    }\n\n    close = () => {\n        this.props.setStore(null);\n    }\n\n    cancelEdit = () => {\n        this.loadData(this.props.store.id);\n    }\n\n    send = () => {\n        let nextState = {\n            \"maxClient\": parseInt(this.state.maxClient),\n            // \"people\": this.state.people,\n            \"gel\": this.state.gel,\n            \"maskRequired\": this.state.maskRequired\n        }\n        let self = this;\n        fetch('http://projet-web-training.ovh/affluence/Affluence/public/boutique/update/'+self.props.store.id, {\n            method: 'POST',\n            body: JSON.stringify(nextState)\n        }).then((response) => {\n            response.json().then((response) => {\n                self.loadData(self.props.store.id);\n            })\n        }).catch(err => {\n          console.error(err)\n        })\n    }\n\n    render() {\n        \n        if (!this.state.edit) {\n            return(\n                <div className=\"store\">\n                    <div className=\"head\">\n                        <h5>Boutique</h5>\n                        <Icon className=\"backBtn\" name=\"times\" onClick={this.close} />\n                    </div>\n                    {this.state.loaded ? <Fragment>\n                        <div className=\"storeInfos\">\n                            <div>\n                                <p>{this.state.nom}</p>\n                                <p>{this.state.adresse}</p>\n                                <p>{this.state.codePostal} {this.state.ville}</p>\n                            </div>\n                            {/* <img className=\"storeImg\" src=\"\" /> */}\n                        </div>\n                        <div className=\"timeWait\">\n                            <p><span>{this.state.waitTime}</span>min</p>\n                            <p>Temps d'attente estimé</p>\n                        </div>\n                        <div className=\"rowPeopleCapacity\">\n                            <div className=\"people\">\n                                <p>{this.state.people}</p>\n                                <p>Personnes</p>\n                            </div>\n                            <div className=\"capacity\">\n                                <p>{this.state.maxClient}</p>\n                                <p>Capacités max.</p>\n                            </div>\n                        </div>\n                        <div className=\"rowMaskGel\">\n                            {this.state.maskRequired ? <div className=\"mask\">\n                                <img className=\"maskImg\" src={maskImg} alt=\"Logo masque obligatoire\" />\n                                <p>Masque obligatoire</p>\n                            </div> : null}\n                            {this.state.gel ? <div className=\"gel\">\n                                <img className=\"gelImg\" src={gelImg} alt=\"Logo gel hydroalcoolique disponible\" />\n                                <p>Gel hydroalcoolique disponible</p>\n                            </div>: null}\n                        </div>\n                        <div className=\"editBtn\" onClick={this.edit}>\n                            <h5>Suggérer une modification</h5>\n                        </div>\n                    </Fragment> : null }\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"store\">\n                    <div className=\"head\">\n                        <h5>Boutique</h5>\n                        <Icon className=\"backBtn\" name=\"arrow-left\" onClick={this.cancelEdit} />\n                    </div>\n                    <div className=\"storeInfos\">\n                        <div>\n                            <p>{this.props.store.nom}</p>\n                            <p>{this.props.store.adresse}</p>\n                            <p>{this.props.store.codePostal} {this.props.store.ville}</p>\n                        </div>\n                        {/* <img className=\"storeImg\" src=\"\" /> */}\n                    </div>\n                    <div className=\"editContainer\">\n                        <div className=\"editCapacity\">\n                            <p>Capacités maximal</p>\n                            <input type=\"number\" className=\"numberStoreEdit\" value={this.state.maxClient} onChange={this.handleChangeCapacity} />\n                        </div>\n                        <div className=\"editPeople\">\n                            <p>Personnes dans la file d'attente</p>\n                            <input type=\"number\" className=\"peopleStoreEdit\" value={this.state.people} onChange={this.handleChangePeople} />\n                        </div>\n                        <div className=\"editMask\">\n                            <p>Masque obligatoire</p>\n                            <Switch\n                                checked={this.state.maskRequired}\n                                onChange={this.handleMask}\n                                color=\"default\"\n                                name=\"checkedB\"\n                            />\n                        </div>\n                        <div className=\"editGel\">\n                            <p>Gel hydroalcoolique disponible</p>\n                            <Switch\n                                checked={this.state.gel}\n                                onChange={this.handleGel}\n                                color=\"default\"\n                                name=\"checkedB\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"editBtn\" onClick={this.send}>\n                        <h5>Envoyer</h5>\n                    </div>\n                </div>\n            );\n        }\n        \n    }\n}\n\nexport default Store;\n","import React from 'react';\nimport '../assets/style/LeftMenu.css';\nimport { Link } from 'react-router-dom';\n\nimport userLogo from '../images/user_icon.png'\n\nvar Icon = require('react-fontawesome')\n\nclass LeftMenu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayMenu: false,\n        }\n    }\n\n    displayMenu = () => {\n        this.setState({displayMenu: !this.state.displayMenu});\n    }\n\n    goToAccueil = () => {\n        if (this.props.page === \"HOME\") {\n            this.setState({displayMenu: false});\n        } else {\n            this.props.togglePage(\"HOME\");\n        }\n    }\n\n    goToHistory = () => {\n        this.props.togglePage(\"HISTORY\");\n    }\n\n    goToSettings = () => {\n        this.props.togglePage(\"SETTINGS\");\n    }\n\n    render() {\n        return (\n            <div className={this.state.displayMenu ? \"leftMenu largeMenu\" : \"leftMenu\"}>\n                {!this.state.displayMenu ? <Icon className=\"menuIcon\" name=\"bars\" onClick={this.displayMenu} />:\n                <h2 className=\"title\">Affluence</h2>}\n                {this.state.displayMenu ? <div className=\"userInfo\">\n                    <img className=\"avatar\" src={userLogo} alt=\"votre avatar\" />\n                    <h2>Bienvenue</h2>\n                    {this.props.connected ? <h3 className=\"name\">Patrick Nollet</h3> :\n                    <Link to=\"/affluence/login\"><div className=\"btnConnect\"><h5>Se connecter</h5></div></Link>}\n                </div> : null}\n                <div className=\"middleMenu\">\n                    <div className=\"rowMenu\" onClick={this.goToAccueil}>\n                        <Icon className=\"menuIcon\" name=\"home\" />\n                        {this.state.displayMenu ? <h5>Accueil</h5> : null}\n                    </div>\n                    {this.props.connected ? <div className=\"rowMenu\" onClick={this.goToHistory}>\n                        <Icon className=\"menuIcon\" name=\"clipboard-list\" />\n                        {this.state.displayMenu ? <h5>Historique</h5> : null}\n                    </div> : null }\n                    <div className=\"rowMenu\" onClick={this.goToSettings}>\n                        <Icon className=\"menuIcon\" name=\"cogs\" />\n                        {this.state.displayMenu ? <h5>Paramètres</h5> : null}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LeftMenu;","import React from 'react';\nimport '../assets/style/RowHistory.css';\n\nclass RowHistory extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            displayDetail: false,\n            element: [\"A\", \"A\", \"A\"]\n        }\n    }\n\n    toggleDisplay = () => {\n        this.setState({displayDetail: !this.state.displayDetail});\n    }\n\n    render() {\n\n        return(\n            <div className=\"rowHistory\" onClick={this.toggleDisplay}>\n                <div className=\"retracted\">\n                    <div>\n                        <p>H&M</p>\n                        <p>17 rue du Louvre</p>\n                        <p>75001 Paris</p>\n                    </div>\n                    <p className=\"pointsGlobal\">+&nbsp;<span>4</span>&nbsp;points</p>\n                </div>\n                {this.state.displayDetail ? <div className=\"details\">\n                    {this.state.element.map(function(elem, i){\n                        return <div>\n                            <p>Mise a jour du nombre de personne dans la file d'attente</p>\n                            <p className=\"pointsDetail\">+<span>2</span>&nbsp;points</p>\n                        </div>;\n                    })}                    \n                </div> : null }\n            </div>\n        );\n    }\n}\n\nexport default RowHistory;","import React from 'react';\nimport '../assets/style/History.css';\nimport RowHistory from './RowHistory';\n\nvar Icon = require('react-fontawesome')\n\nclass History extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            element: [\"A\",\"A\",\"A\",\"A\",\"A\"]\n        }\n    }\n\n    backToHome = () => {\n        this.props.togglePage(\"HOME\")\n    }\n\n\n    render() {\n\n        return(\n            <div className=\"history\">\n                <Icon className=\"backToHome\" name=\"arrow-left\" onClick={this.backToHome} />\n                <h2 className=\"title\">Historique</h2>\n                {this.state.element.map(function(elem, i){\n                    return <RowHistory element={elem} key={i} />;\n                })}\n                <h5 className=\"points\"><span>0</span>&nbsp;points</h5>\n            </div>\n        );\n    }\n}\n\nexport default History;","import React from 'react';\n\nvar Icon = require('react-fontawesome')\n\nclass FieldEditable extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            edit: false,\n            icon: \"pen\",\n            title: null,\n            value: null,\n        }\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            edit: false,\n            icon: \"pen\",\n            title: this.props.title,\n            value: this.props.value\n        })\n    }\n\n    edit = () => {\n        this.setState({\n            edit: !this.state.edit,\n            icon: this.state.icon === \"pen\" ? \"check\" : \"pen\",\n        })\n        if (this.state.edit) {\n            //save\n        }\n    }\n\n    handleChangeValue = (elem) => {\n        this.setState({value: elem.target.value})\n    }\n\n    render() {\n\n        return(\n            <div>\n                <div>\n                    <p className=\"subtitle\">{this.state.title}</p>\n                    {!this.state.edit ? <p className=\"field\">{this.state.value}</p> :\n                    <input type=\"text\" className=\"inputField\" value={this.state.value} onChange={this.handleChangeValue} />}\n                </div>\n                <div>\n                    {this.state.edit ? <Icon className=\"editField\" name=\"times\" onClick={this.componentDidMount} /> : null }\n                    <Icon className=\"editField\" name={this.state.icon} onClick={this.edit} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FieldEditable;\n","import React from 'react';\nimport '../assets/style/Settings.css';\nimport FieldEditable from './FieldEditable';\n\nvar Icon = require('react-fontawesome')\n\nclass Settings extends React.Component {\n\n    backToHome = () => {\n        this.props.togglePage(\"HOME\")\n    }\n\n    render() {\n\n        return(\n            <div className=\"settings\">\n                <Icon className=\"backToHome\" name=\"arrow-left\" onClick={this.backToHome} />\n                <h2 className=\"title\">Paramètres</h2>\n                <div className=\"infosUser\">\n                    <FieldEditable title=\"Pseudo\" value=\"p.nollet75\" />\n                    <FieldEditable title=\"E-mail\" value=\"patrick@mail.fr\" />\n                    <FieldEditable title=\"Mot de passe\" value=\"**********\" />\n                </div>\n                {/* TODO if store: add field: name, lat, long, adresse, cp, ville */}\n            </div>\n        );\n    }\n}\n\nexport default Settings;\n","import React, { Fragment } from 'react';\nimport '../assets/style/HomePage.css';\nimport Maps from './Maps';\nimport Search from './Search';\nimport Store from './Store';\nimport LeftMenu from './LeftMenu';\nimport History from './History';\nimport Settings from './Settings';\n\nclass HomePage extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            store: null,\n            connected: false,\n            page: \"HOME\",\n        }\n    }\n\n    setStore = (store) => {\n        this.setState({store: store});\n    }\n\n    togglePage = (nextPage) => {\n        this.setState({page: nextPage});\n    }\n\n    render() {\n        return(\n            <Fragment>\n                <Maps setStore={this.setStore} />\n                {(() => {\n                    switch(this.state.page) {\n                    case \"HISTORY\":\n                        return <History togglePage={this.togglePage} />\n                    case \"SETTINGS\":\n                        return <Settings togglePage={this.togglePage} />\n                    default:\n                        return <LeftMenu connected={this.state.connected} togglePage={this.togglePage} page={this.state.page} />\n                    }\n                })()}\n                <div className=\"rightMenu\">\n                    <Search setStore={this.setStore} />\n                    {this.state.store ? <Store store={this.state.store} setStore={this.setStore} /> : null}\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default HomePage;\n","import React from 'react';\nimport '../assets/style/NotFound.css';\n\nclass NotFound extends React.Component {\n    render() {\n        return(\n            <div className=\"notfound-content\">\n                <h1 className=\"notfound-title\">404</h1>\n                <p className=\"notfound-text\">Oops! Something is wrong.</p>\n                <a className=\"notfound-button\" href=\"/\">Go back in initial page, is better.</a>\n            </div>\n        )\n    }\n}\n\nexport default NotFound;","import React from 'react';\nimport '../assets/style/Login.css';\nimport Backgound from '../images/login_background.jpg';\nimport { Link } from 'react-router-dom';\n\nclass Login extends React.Component {\n\n    render() {        \n        return(\n            <div className=\"login-content\" style={{background: `url(${Backgound}) center center / cover no-repeat`}}>\n                <form className=\"login-form\" method=\"POST\">\n                    <h1 className=\"title\">Affluence</h1>\n                    <div className=\"inputs\">\n                        <div className=\"username-section input-section\">\n                            <input type=\"text\" name=\"username\" className=\"input\" autoComplete=\"off\" required  />\n                            <label for=\"username\" class=\"label-name\">\n                                <span class=\"content-name\">Utilisateur</span>\n                            </label>\n                        </div>\n                        <div className=\"password-section input-section\">\n                            <input type=\"password\" name=\"password\" class=\"input\" required />\n                            <label for=\"password\" class=\"label-name\">\n                                <span class=\"content-name\">Mot de passe</span>\n                            </label>\n                        </div>\n                    </div>\n                    <div className=\"login-form__submit-wrapper\">\n                        <div className=\"login-form__button cta\">Se Connecter</div>\n                        <Link to=\"/signup\">\n                            <div className=\"login-form__button cta\">Créer un compte</div>\n                        </Link>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React from 'react';\nimport '../assets/style/SignUp.css';\nimport Backgound from '../images/login_background.jpg';\n\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            username: \"\",\n            password: \"\"\n        }\n\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n\n    }\n\n    signUpUser() {\n        // Simple POST request with a JSON body using fetch\n        const requestOptions = {\n            mode: 'no-cors',\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ title: 'React POST Request Sign Up User' })\n        };\n        fetch('https://www.projet-web-training.ovh/affluence/Affluence/public/user/register', requestOptions)\n            .then(response => response.json())\n            .then(data => this.setState(this.state))\n            .catch(err => { console.error(err) });\n    }\n\n    onChangeEmail(event) {\n        this.setState({\n            email: event.target.value,\n        });\n    }\n\n    onChangeUsername(event) {\n        this.setState({\n            username: event.target.value,\n        });\n    }\n\n    onChangePassword(event) {\n        this.setState({\n            password: event.target.value,\n        });\n    }\n\n    render() {\n        console.log(this.state);\n        return(\n            <div className=\"signup-content\" style={{background: `url(${Backgound}) center center / cover no-repeat`}}>\n                <form className=\"signup-form\" method=\"POST\">\n                    <h1 className=\"title\">Affluence</h1>\n                    <div className=\"inputs\">\n                        <div className=\"mail-section input-section\">\n                            <input type=\"email\" name=\"mail\" className=\"input input-email\" autoComplete=\"off\" required onChange={this.onChangeEmail} />\n                            <label htmlFor=\"mail\" className=\"label-name\">\n                                <span className=\"content-name\">Email</span>\n                            </label>\n                        </div>\n                        <div className=\"username-section input-section\">\n                            <input type=\"text\" name=\"username\" className=\"input\" autoComplete=\"off\" required onChange={this.onChangeUsername} />\n                            <label htmlFor=\"username\" className=\"label-name\">\n                                <span className=\"content-name\">Utilisateur</span>\n                            </label>\n                        </div>\n                        <div className=\"password-section input-section\">\n                            <input type=\"password\" name=\"password\" className=\"input\" required onChange={this.onChangePassword} />\n                            <label htmlFor=\"password\" className=\"label-name\">\n                                <span className=\"content-name\">Mot de passe</span>\n                            </label>\n                        </div>\n                    </div>\n                    <div className=\"login-form__submit-wrapper\">\n                        <div className=\"login-form__button cta\" onClick={this.signUpUser}>S'inscrire</div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SignUp;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport NotFound from './components/NotFound';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path='/affluence/' component={HomePage} />\n            <Route exact path='/affluence/login' component={Login} />\n            <Route exact path='/affluence/signup' component={SignUp} />\n            <Route component={NotFound} />\n          </Switch>\n        </BrowserRouter>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}